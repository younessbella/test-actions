on:
  push:
    branches: [main]
  release:
    types: [prereleased, released]
  workflow_dispatch:
    inputs:
      apps:
        description: Comma-separated list of applications to build
        required: true
        type: string
      env:
        default: dev
        description: Environment to deploy application
        required: true
        type: string
      ref:
        default: main
        description: Branch, tag, or SHA to deploy application from
        required: true
        type: string
name: Deploy
env:
  ENVIRONMENT: >-
    ${{ ( ( ( github.event_name == 'release' && github.event.release.prerelease != true ) || ( contains( github.event.inputs.env, 'prod' ) ) ) && 'prod' ) ||
        ( ( ( github.event_name == 'release' && github.event.release.prerelease == true ) || ( contains( github.event.inputs.env, 'qa' ) ) ) && 'qa' ) ||
        ( ( ( github.event_name == 'push') || ( contains( github.event.inputs.env, 'dev' ) ) ) && 'dev') }}
  URL: >-
    ${{ ( ( ( github.event_name == 'release' && github.event.release.prerelease != true ) || ( contains( github.event.inputs.env, 'prod' ) ) ) && 'https://my.premise.com' ) ||
        ( ( ( github.event_name == 'release' && github.event.release.prerelease == true ) || ( contains( github.event.inputs.env, 'qa' ) ) ) && 'https://qa.my.premise.com' ) ||
        ( ( ( github.event_name == 'push') || ( contains( github.event.inputs.env, 'dev' ) ) ) && 'https://dev.my.premise.com') }}
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Echoing
        run: |-
          if [ -n "${{ inputs.env }}" ]; then \
            ENVIRONMENT_NAME="${{ inputs.env }}"; \
          elif [ "${{ github.event_name == 'release' }}" = true ]; then \
            if [ "${{ github.event.release.prerelease != true }}" = true ]; then \
              ENVIRONMENT_NAME="prod"; \
            else \
              ENVIRONMENT_NAME="qa"; \
            fi; \
          else \
            ENVIRONMENT_NAME="dev"; \
          fi;

          echo "ENVIRONMENT_NAME=$ENVIRONMENT_NAME" >> $GITHUB_ENV;
      - name: Echo
        run: echo ${{ env.ENVIRONMENT_NAME }}
